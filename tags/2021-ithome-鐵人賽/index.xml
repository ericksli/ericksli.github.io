<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>2021 IThome 鐵人賽 on EricLog</title><link>https://eric.swiftzer.net/tags/2021-ithome-%E9%90%B5%E4%BA%BA%E8%B3%BD/</link><description>Recent content in 2021 IThome 鐵人賽 on EricLog</description><generator>Hugo -- 0.139.2</generator><language>zh-tw</language><lastBuildDate>Fri, 15 Oct 2021 00:00:00 +0800</lastBuildDate><atom:link href="https://eric.swiftzer.net/tags/2021-ithome-%E9%90%B5%E4%BA%BA%E8%B3%BD/index.xml" rel="self" type="application/rss+xml"/><item><title>2021 iThome 鐵人賽 Day 30：Wrapping up</title><link>https://eric.swiftzer.net/2021/10/2021-ithome-ironman-30-wrapping-up/</link><pubDate>Fri, 15 Oct 2021 00:00:00 +0800</pubDate><guid>https://eric.swiftzer.net/2021/10/2021-ithome-ironman-30-wrapping-up/</guid><description>&lt;blockquote>
&lt;p>本篇文章是 &lt;a href="https://ithelp.ithome.com.tw/2021ironman">2021 iThome 鐵人賽&lt;/a>參賽題目「&lt;a href="https://ithelp.ithome.com.tw/users/20139666/ironman/4661">寫一個列車抵站時間 Android App&lt;/a>」的第 30 篇，你可到 iThome &lt;a href="https://ithelp.ithome.com.tw/articles/10281769">查看原文&lt;/a>。&lt;/p>
&lt;p>&lt;a href="https://eric.swiftzer.net/2021-ithome-ironman/">文章目錄&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;p>終於來到最後一篇了！不經不覺已經寫了三十篇文章。我們由 Ktor client 接駁 API 一直講到 UI，然後再做 ViewModel 的 unit testing。中間加插了時間處理、Flipper 和 proxy server 的內容。其實這些內容有部分是以前工作上跟 Android 同事定期會議分享的內容。那時已經有想法把內容放到自己的 blog 上，但最後只是放了小許。現在有這個機會就加插這些內容進去。除了用來填滿三十篇之外，就是把一些不會直接在 Android 開發教學找到但又實用的東西放進去。我在八月尾才決定題目，然後開始寫開首的文章，並且準備示範 project 的 code。初初寫的時候以為三十篇是很多，所以開頭寫的內容不夠充實。但到了多 code snippet 的部分就發覺光是 code 就很長，要分拆做好幾篇。所以三十篇入面光是不同的 unit testing 都佔了十篇。由於我是一邊寫文一邊準備示範 project，所以內容分配是頭輕尾重，尤其是後段做 UI 的部分一篇的長度比開首的文章長幾倍。還有是內容可能有時會跟前一兩篇重覆（好像 Dagger 某些內容有重覆提及）。本來還打算加插 Compose 的內容但發覺剩餘篇數太少而且寫完都不夠完整，所以改做 ViewModel 測試作罷。&lt;/p></description></item><item><title>2021 iThome 鐵人賽 Day 29：Leftover topics</title><link>https://eric.swiftzer.net/2021/10/2021-ithome-ironman-29-leftover-topics/</link><pubDate>Thu, 14 Oct 2021 00:00:00 +0800</pubDate><guid>https://eric.swiftzer.net/2021/10/2021-ithome-ironman-29-leftover-topics/</guid><description>&lt;blockquote>
&lt;p>本篇文章是 &lt;a href="https://ithelp.ithome.com.tw/2021ironman">2021 iThome 鐵人賽&lt;/a>參賽題目「&lt;a href="https://ithelp.ithome.com.tw/users/20139666/ironman/4661">寫一個列車抵站時間 Android App&lt;/a>」的第 29 篇，你可到 iThome &lt;a href="https://ithelp.ithome.com.tw/articles/10281516">查看原文&lt;/a>。&lt;/p>
&lt;p>&lt;a href="https://eric.swiftzer.net/2021-ithome-ironman/">文章目錄&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;p>我們終於來到第廿九篇，我們這次討論的題目都是之前討論過的東西的延伸。因為篇幅和時間有限就只好把它們合併成一篇。&lt;/p></description></item><item><title>2021 iThome 鐵人賽 Day 28：ETA screen testing (2)</title><link>https://eric.swiftzer.net/2021/10/2021-ithome-ironman-28-eta-screen-testing-2/</link><pubDate>Wed, 13 Oct 2021 00:00:00 +0800</pubDate><guid>https://eric.swiftzer.net/2021/10/2021-ithome-ironman-28-eta-screen-testing-2/</guid><description>&lt;blockquote>
&lt;p>本篇文章是 &lt;a href="https://ithelp.ithome.com.tw/2021ironman">2021 iThome 鐵人賽&lt;/a>參賽題目「&lt;a href="https://ithelp.ithome.com.tw/users/20139666/ironman/4661">寫一個列車抵站時間 Android App&lt;/a>」的第 28 篇，你可到 iThome &lt;a href="https://ithelp.ithome.com.tw/articles/10281130">查看原文&lt;/a>。&lt;/p>
&lt;p>&lt;a href="https://eric.swiftzer.net/2021-ithome-ironman/">文章目錄&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;p>上一篇我們寫了一些 &lt;code>EtaViewModel&lt;/code> 的測試，這一篇會集中寫跟時間相關的測試。&lt;/p>
&lt;p>之前在 &lt;code>EtaViewModel&lt;/code> 我們定義了更新一次的間距常數 &lt;code>AUTO_REFRESH_INTERVAL&lt;/code>，現在我們要在 &lt;code>EtaViewModelTest&lt;/code> 用到它，所以要把它改成 public：&lt;/p></description></item><item><title>2021 iThome 鐵人賽 Day 27：ETA screen testing (1)</title><link>https://eric.swiftzer.net/2021/10/2021-ithome-ironman-27-eta-screen-testing-1/</link><pubDate>Tue, 12 Oct 2021 00:00:00 +0800</pubDate><guid>https://eric.swiftzer.net/2021/10/2021-ithome-ironman-27-eta-screen-testing-1/</guid><description>&lt;blockquote>
&lt;p>本篇文章是 &lt;a href="https://ithelp.ithome.com.tw/2021ironman">2021 iThome 鐵人賽&lt;/a>參賽題目「&lt;a href="https://ithelp.ithome.com.tw/users/20139666/ironman/4661">寫一個列車抵站時間 Android App&lt;/a>」的第 27 篇，你可到 iThome &lt;a href="https://ithelp.ithome.com.tw/articles/10280812">查看原文&lt;/a>。&lt;/p>
&lt;p>&lt;a href="https://eric.swiftzer.net/2021-ithome-ironman/">文章目錄&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;p>上一篇我們完成了車站列表頁的 ViewModel 和 Presenter 的 unit test。現在轉過去寫班次頁的 unit test。&lt;/p>
&lt;h2 id="etapresenter">&lt;code>EtaPresenter&lt;/code>&lt;/h2>
&lt;p>首先我們寫 &lt;code>EtaPresenter&lt;/code> 的 test。這次我們來點新意思：使用 JUnit 4 的 parameterized test，寫法跟之前 &lt;code>LineStationPresenterTest&lt;/code> 很不同。Parameterized test 的基本格式是：&lt;/p></description></item><item><title>2021 iThome 鐵人賽 Day 26：Station list screen testing</title><link>https://eric.swiftzer.net/2021/10/2021-ithome-ironman-26-station-list-screen-testing/</link><pubDate>Mon, 11 Oct 2021 00:00:00 +0800</pubDate><guid>https://eric.swiftzer.net/2021/10/2021-ithome-ironman-26-station-list-screen-testing/</guid><description>&lt;blockquote>
&lt;p>本篇文章是 &lt;a href="https://ithelp.ithome.com.tw/2021ironman">2021 iThome 鐵人賽&lt;/a>參賽題目「&lt;a href="https://ithelp.ithome.com.tw/users/20139666/ironman/4661">寫一個列車抵站時間 Android App&lt;/a>」的第 26 篇，你可到 iThome &lt;a href="https://ithelp.ithome.com.tw/articles/10280351">查看原文&lt;/a>。&lt;/p>
&lt;p>&lt;a href="https://eric.swiftzer.net/2021-ithome-ironman/">文章目錄&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;p>終於來到為 &lt;code>ViewModel&lt;/code> 寫 unit test 的部分，亦都意味着這個系列快要完結。之前我們寫過其他 layer 的 unit test，用過 &lt;a href="https://mockk.io/">MockK&lt;/a> 和 &lt;a href="https://strikt.io/">Strikt&lt;/a>。來到現在偏向 UI 那邊的 unit test，我們會用到 &lt;a href="http://robolectric.org/">Robolectric&lt;/a>。&lt;/p></description></item><item><title>2021 iThome 鐵人賽 Day 25：ETA screen (4)</title><link>https://eric.swiftzer.net/2021/10/2021-ithome-ironman-25-eta-screen-4/</link><pubDate>Sun, 10 Oct 2021 00:00:00 +0800</pubDate><guid>https://eric.swiftzer.net/2021/10/2021-ithome-ironman-25-eta-screen-4/</guid><description>&lt;blockquote>
&lt;p>本篇文章是 &lt;a href="https://ithelp.ithome.com.tw/2021ironman">2021 iThome 鐵人賽&lt;/a>參賽題目「&lt;a href="https://ithelp.ithome.com.tw/users/20139666/ironman/4661">寫一個列車抵站時間 Android App&lt;/a>」的第 25 篇，你可到 iThome &lt;a href="https://ithelp.ithome.com.tw/articles/10279995">查看原文&lt;/a>。&lt;/p>
&lt;p>&lt;a href="https://eric.swiftzer.net/2021-ithome-ironman/">文章目錄&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;p>現在來到整個 app 最後一個功能：錯誤 banner。這個 banner 出現的目的是因為鐵路隧道沿綫的電話上網訊號都接收得不太好（因為太多人同時在用），很容易出現錯誤。如果自動更新時有不能上網的錯誤會彈出全頁錯誤畫面的話效果就不太好。所以就設計了 banner 形式的顯示錯誤方式。&lt;/p></description></item><item><title>2021 iThome 鐵人賽 Day 24：ETA screen (3)</title><link>https://eric.swiftzer.net/2021/10/2021-ithome-ironman-24-eta-screen-3/</link><pubDate>Sat, 09 Oct 2021 00:00:00 +0800</pubDate><guid>https://eric.swiftzer.net/2021/10/2021-ithome-ironman-24-eta-screen-3/</guid><description>&lt;blockquote>
&lt;p>本篇文章是 &lt;a href="https://ithelp.ithome.com.tw/2021ironman">2021 iThome 鐵人賽&lt;/a>參賽題目「&lt;a href="https://ithelp.ithome.com.tw/users/20139666/ironman/4661">寫一個列車抵站時間 Android App&lt;/a>」的第 24 篇，你可到 iThome &lt;a href="https://ithelp.ithome.com.tw/articles/10279594">查看原文&lt;/a>。&lt;/p>
&lt;p>&lt;a href="https://eric.swiftzer.net/2021-ithome-ironman/">文章目錄&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;p>我們這次會為班次頁加上自動更新和順帶為下一篇實作錯誤 banner 做準備。&lt;/p>
&lt;p>我們這頁除非顯示不能連接到互聯網這類錯誤外，都不會出現重新載入按鈕，這是因為這頁就應該自動更新。按照 &lt;a href="https://data.gov.hk/tc-data/dataset/mtr-data2-nexttrain-data">API 的介紹&lt;/a>，它是每十秒更新一次。我們先準備一個 constant 來表示這個數值：&lt;/p></description></item><item><title>2021 iThome 鐵人賽 Day 23：ETA screen (2)</title><link>https://eric.swiftzer.net/2021/10/2021-ithome-ironman-23-eta-screen-2/</link><pubDate>Fri, 08 Oct 2021 00:00:00 +0800</pubDate><guid>https://eric.swiftzer.net/2021/10/2021-ithome-ironman-23-eta-screen-2/</guid><description>&lt;blockquote>
&lt;p>本篇文章是 &lt;a href="https://ithelp.ithome.com.tw/2021ironman">2021 iThome 鐵人賽&lt;/a>參賽題目「&lt;a href="https://ithelp.ithome.com.tw/users/20139666/ironman/4661">寫一個列車抵站時間 Android App&lt;/a>」的第 23 篇，你可到 iThome &lt;a href="https://ithelp.ithome.com.tw/articles/10279171">查看原文&lt;/a>。&lt;/p>
&lt;p>&lt;a href="https://eric.swiftzer.net/2021-ithome-ironman/">文章目錄&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;h2 id="savedstatehandle">&lt;code>SavedStateHandle&lt;/code>&lt;/h2>
&lt;p>不知道大家有沒有發現在「ETA Screen (1)」貼出來的 &lt;code>EtaViewModel&lt;/code> 的 constructor 有一個 &lt;code>SavedStateHandle&lt;/code>？在繼續完成餘下的錯誤情景前，我們先看看 &lt;code>SavedStateHandle&lt;/code> 是甚麼。&lt;/p></description></item><item><title>2021 iThome 鐵人賽 Day 22：Whistle proxy</title><link>https://eric.swiftzer.net/2021/10/2021-ithome-ironman-22-whistle-proxy/</link><pubDate>Thu, 07 Oct 2021 00:00:00 +0800</pubDate><guid>https://eric.swiftzer.net/2021/10/2021-ithome-ironman-22-whistle-proxy/</guid><description>&lt;blockquote>
&lt;p>本篇文章是 &lt;a href="https://ithelp.ithome.com.tw/2021ironman">2021 iThome 鐵人賽&lt;/a>參賽題目「&lt;a href="https://ithelp.ithome.com.tw/users/20139666/ironman/4661">寫一個列車抵站時間 Android App&lt;/a>」的第 22 篇，你可到 iThome &lt;a href="https://ithelp.ithome.com.tw/articles/10278714">查看原文&lt;/a>。&lt;/p>
&lt;p>&lt;a href="https://eric.swiftzer.net/2021-ithome-ironman/">文章目錄&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;p>由於我們在上一篇已經完成了成功載入班次的部分，接下來要做的當然是不正常的情況。雖然港鐵間中會有事故，但都可遇不可求。要檢查我們做的東西是不是正確除了寫自動化測試之外，既然我們都做到 UI 的部分那就當然要直接看實物更好吧。所以我們先換一換題目討論 proxy server。&lt;/p></description></item><item><title>2021 iThome 鐵人賽 Day 21：ETA screen (1)</title><link>https://eric.swiftzer.net/2021/10/2021-ithome-ironman-21-eta-screen-1/</link><pubDate>Wed, 06 Oct 2021 00:00:00 +0800</pubDate><guid>https://eric.swiftzer.net/2021/10/2021-ithome-ironman-21-eta-screen-1/</guid><description>&lt;blockquote>
&lt;p>本篇文章是 &lt;a href="https://ithelp.ithome.com.tw/2021ironman">2021 iThome 鐵人賽&lt;/a>參賽題目「&lt;a href="https://ithelp.ithome.com.tw/users/20139666/ironman/4661">寫一個列車抵站時間 Android App&lt;/a>」的第 21 篇，你可到 iThome &lt;a href="https://ithelp.ithome.com.tw/articles/10278274">查看原文&lt;/a>。&lt;/p>
&lt;p>&lt;a href="https://eric.swiftzer.net/2021-ithome-ironman/">文章目錄&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;p>現在來到整個 app 最重要的頁面：抵站時間頁。這個頁面基本上都是跟上一頁一樣，都是以 &lt;code>RecyclerView&lt;/code> 為主。但因為這次的內容要從 API server 取得，即是說我們需要處理載入中、載入成功和載入失敗三個情景。當中載入成功時更要細分為顯示班次、事故和延誤三個情景。情況好像有點複雜，我們先看看各情景時的畫面：&lt;/p></description></item></channel></rss>