<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Java on EricLog</title><link>https://eric.swiftzer.net/tags/java/</link><description>Recent content in Java on EricLog</description><generator>Hugo -- 0.139.2</generator><language>zh-tw</language><lastBuildDate>Thu, 13 Aug 2020 23:50:59 +0800</lastBuildDate><atom:link href="https://eric.swiftzer.net/tags/java/index.xml" rel="self" type="application/rss+xml"/><item><title>Java 量度單位 (JSR 363 Units of Measurement API)</title><link>https://eric.swiftzer.net/2020/08/javax-measure/</link><pubDate>Thu, 13 Aug 2020 23:50:59 +0800</pubDate><guid>https://eric.swiftzer.net/2020/08/javax-measure/</guid><description>&lt;p>在日常生活中，我們都會用到不同的量度單位。例如重量有時會用公斤 (kg)，有時會用磅 (lb)，有時又會用斤之類。如果在 Java 上表示這些數值，用 &lt;code>int&lt;/code>、&lt;code>float&lt;/code>、&lt;code>double&lt;/code> 的話有時會令人理解錯誤，就好像 UNIX timestamp 般一時會用秒一時會用毫秒。為防止人們誤解這個 variable 或 method 的時間單位，通常都要在名稱加上 &lt;code>millis&lt;/code> 之類的後綴。知名例子有 &lt;code>System.currentTimeMillis&lt;/code>。如果處理時間的話，現成的有 &lt;a href="https://docs.oracle.com/javase/7/docs/api/java/util/concurrent/TimeUnit.html">&lt;code>TimeUnit&lt;/code>&lt;/a>。不過如果去到之前的重量單位的話，JDK 就沒有現成的 class。&lt;/p></description></item><item><title>Kotlin for Android</title><link>https://eric.swiftzer.net/2017/06/kotlin-for-android/</link><pubDate>Mon, 12 Jun 2017 23:43:16 +0800</pubDate><guid>https://eric.swiftzer.net/2017/06/kotlin-for-android/</guid><description>&lt;p>在四月開始轉用 &lt;a href="https://kotlinlang.org/">Kotlin&lt;/a> 來寫自己的 Android app。其實上年八月左右已經留意到 Kotlin 這個 JVM 語言能在 Android app 開發時使用，不過那時因為沒有太多時間所以只是看了少許官方教學和一些外國網誌就作罷，沒有真正拿來寫 Android app。到了最近看到愈來愈多人開始轉用 Kotlin 所以才真正開始轉用。到了現在 Kotlin 更成為 Android first-class support language。&lt;/p></description></item><item><title>Timber live template for Java/Kotlin</title><link>https://eric.swiftzer.net/2017/05/timber-live-template/</link><pubDate>Mon, 22 May 2017 22:53:34 +0800</pubDate><guid>https://eric.swiftzer.net/2017/05/timber-live-template/</guid><description>&lt;p>最近轉了用 &lt;a href="https://kotlinlang.org/">Kotlin&lt;/a> 來寫自己的 Android app，但發現 Android Studio 在 Kotlin 檔案內無法使用 Logcat &lt;code>logd&lt;/code>、&lt;code>logm&lt;/code> 之類的 &lt;a href="https://www.jetbrains.com/help/idea/using-live-templates.html">Live template&lt;/a>。&lt;a href="https://github.com/Kotlin/anko">Anko&lt;/a> 的 &lt;code>AnkoLogger&lt;/code> 因為用了 &lt;a href="https://developer.android.com/reference/android/util/Log.html#isLoggable(java.lang.String,%20int)">&lt;code>Log.isLoggable&lt;/code>&lt;/a> 來包住 &lt;code>Log.d&lt;/code> 之類的 method 所以在開發時看 log 不夠方便。於是就轉了用 &lt;a href="https://github.com/JakeWharton/timber">Timber&lt;/a> 來做 logging。但是轉了 logging library 都是沒有方便的方法來產生 log message。所以最後我參考了 Android Studio 的 log live template 來做了適用於 Java 和 Kotlin 的 Timber live template。&lt;/p></description></item></channel></rss>