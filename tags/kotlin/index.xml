<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Kotlin on EricLog</title><link>http://eric.swiftzer.net/tags/kotlin/</link><description>Recent content in Kotlin on EricLog</description><generator>Hugo -- gohugo.io</generator><language>zh-Hant-HK</language><lastBuildDate>Sat, 14 Nov 2020 18:52:34 +0800</lastBuildDate><atom:link href="http://eric.swiftzer.net/tags/kotlin/index.xml" rel="self" type="application/rss+xml"/><item><title>Jetpack DataStore 搭配 kotlinx.serialization Protobuf</title><link>http://eric.swiftzer.net/2020/11/androidx-datastore-with-kotlinx-serialization-protobuf/</link><pubDate>Sat, 14 Nov 2020 18:52:34 +0800</pubDate><guid>http://eric.swiftzer.net/2020/11/androidx-datastore-with-kotlinx-serialization-protobuf/</guid><description>上月 kotlinx.serialization 出了 1.0 版。除了支援 JSON 之外，還有支援 Protocol Buffers (Protobuf)，而且還是跨平台支援。而在前一個月 Android 出了 Jetpack DataStore，它是一個用來取</description></item><item><title>Kotlin Annotation Processor</title><link>http://eric.swiftzer.net/2020/04/kotlin-annotation-processor/</link><pubDate>Mon, 27 Apr 2020 23:34:08 +0800</pubDate><guid>http://eric.swiftzer.net/2020/04/kotlin-annotation-processor/</guid><description>如果有做過 Android 開發的話應該都有用過 annotation processor（又稱 codegen），即是在 build.gradle 入面要用 annotationProcessor 或者 kapt 的那些 dependency。用法大概是在</description></item><item><title>Kotlin Parcelize</title><link>http://eric.swiftzer.net/2018/02/parcelize/</link><pubDate>Sun, 11 Feb 2018 23:28:05 +0800</pubDate><guid>http://eric.swiftzer.net/2018/02/parcelize/</guid><description>Kotlin Android extensions 入面有一個實驗功能：Parcelize。它是一個 annotation，只需要在 data class 加上 @Parcelize annotation 和 implement Parcelable interface 就能夠在 compile 時自動生成所需的 boile</description></item><item><title>Parcelable &amp; Intent extra</title><link>http://eric.swiftzer.net/2017/09/parcelable-intent-extra/</link><pubDate>Sat, 16 Sep 2017 12:03:49 +0800</pubDate><guid>http://eric.swiftzer.net/2017/09/parcelable-intent-extra/</guid><description>Android 如果想將自己寫的 data type 的 object 傳到其他 Activity、Fragment 之類的地方的話，就要用 Parcelable 來做 serialization/deserial</description></item><item><title>SemVer</title><link>http://eric.swiftzer.net/2017/06/semver/</link><pubDate>Fri, 16 Jun 2017 00:59:11 +0800</pubDate><guid>http://eric.swiftzer.net/2017/06/semver/</guid><description>剛剛為了方便做 force update app 功能的版本號碼比對就寫了一個 Semantic Versioning (SemVer) 的 Kotlin data class。這個 class 有 implement Comparable，是參照 SemVer 規範要比對 major、min</description></item><item><title>Kotlin for Android</title><link>http://eric.swiftzer.net/2017/06/kotlin-for-android/</link><pubDate>Mon, 12 Jun 2017 23:43:16 +0800</pubDate><guid>http://eric.swiftzer.net/2017/06/kotlin-for-android/</guid><description>在四月開始轉用 Kotlin 來寫自己的 Android app。其實上年八月左右已經留意到 Kotlin 這個 JVM 語言能在 Android app 開發時使用，不過那時因為沒有太多時間所以只是看了少許官方教</description></item><item><title>Timber live template for Java/Kotlin</title><link>http://eric.swiftzer.net/2017/05/timber-live-template/</link><pubDate>Mon, 22 May 2017 22:53:34 +0800</pubDate><guid>http://eric.swiftzer.net/2017/05/timber-live-template/</guid><description>最近轉了用 Kotlin 來寫自己的 Android app，但發現 Android Studio 在 Kotlin 檔案內無法使用 Logcat logd、logm 之類的 Live template。Anko 的 AnkoLogger 因為用了 [Log.isLoggable](https://developer.android.com/reference/android/util/Log.html#isLoggable(java.lang.String, int)) 來包住 Log.d 之</description></item><item><title>Spek</title><link>http://eric.swiftzer.net/2017/04/spek/</link><pubDate>Sat, 22 Apr 2017 23:25:52 +0800</pubDate><guid>http://eric.swiftzer.net/2017/04/spek/</guid><description>&lt;p>之前一直都有留意 &lt;a href="https://kotlinlang.org/">Kotlin&lt;/a> 這個程式語言在 Android app 開發的應用。最近試用 &lt;a href="http://spekframework.org/">Spek&lt;/a> 來做 Android project 的 local test。Spek 是一個用 Kotlin 寫的 testing framework，用法和 Ruby 的 &lt;a href="http://rspec.info/">RSpec&lt;/a> 差不多。對比 Android project 預設用的 JUnit 4，Spek 的寫法會比較清楚。因為 JUnit 4 只靠 class 和method 來為 test 分類，不能 nested（JUnit 5 才支援）。Spek 就用 nested 的方式來把 test 分類，還有就是用 string 來定義 test 名，比起 JUnit 4 用 method 名較易閱讀。&lt;/p>
&lt;p>Spek 有提供 &lt;a href="https://plugins.jetbrains.com/plugin/8564-spek">IntelliJ IDEA/Android Studio plugin&lt;/a>，而且還有 JUnit platform engine。所以在 Android project 上面使用都沒有太大問題。&lt;/p></description></item></channel></rss>